Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ADL_KEY
    ASSIGN_KEY
    BINARYCOMP
    BINARYOP
    CONDITIONAL_EFFECT_KEY
    DISJUNCTIVE_PRECONDITIONS_KEY
    EITHER_KEY
    EXISTENTIAL_KEY
    EXISTENTIAL_PRECONDITIONS_KEY
    FORALL_KEY
    GOALACHIEVED_KEY
    INCREASE_KEY
    MAXIMIZE_KEY
    MDP_KEY
    METRIC_KEY
    MINIMIZE_KEY
    NEGATIVE_PRECONDITIONS_KEY
    NUMBER
    QUANTIFIED_PRECONDITIONS_KEY
    REWARDS_KEY
    REWARD_KEY
    SCALE_DOWN_KEY
    SCALE_UP_KEY
    TOTALTIME_KEY
    UNIVERSAL_PRECONDITIONS_KEY
    WHEN_KEY

Grammar

Rule 0     S' -> pddl
Rule 1     pddl -> domain
Rule 2     pddl -> problem
Rule 3     domain -> LPAREN DEFINE_KEY domain_def opt_dom_parts RPAREN
Rule 4     problem -> LPAREN DEFINE_KEY problem_def domain_def opt_prob_parts goal_def RPAREN
Rule 5     domain_def -> LPAREN DOMAIN_KEY NAME RPAREN
Rule 6     problem_def -> LPAREN PROBLEM_KEY NAME RPAREN
Rule 7     opt_dom_parts -> opt_dom_part opt_dom_parts
Rule 8     opt_dom_parts -> opt_dom_part
Rule 9     opt_dom_part -> require_def
Rule 10    opt_dom_part -> types_def
Rule 11    opt_dom_part -> constants_def
Rule 12    opt_dom_part -> predicates_def
Rule 13    opt_dom_part -> actions_def
Rule 14    opt_dom_part -> functions_def
Rule 15    opt_dom_part -> empty
Rule 16    opt_prob_parts -> opt_prob_parts opt_prob_part
Rule 17    opt_prob_parts -> opt_prob_part
Rule 18    opt_prob_part -> require_def
Rule 19    opt_prob_part -> objects_def
Rule 20    opt_prob_part -> init_def
Rule 21    opt_prob_part -> empty
Rule 22    objects_def -> LPAREN OBJECTS_KEY typed_constants_lst RPAREN
Rule 23    init_def -> LPAREN INIT_KEY LPAREN AND_KEY ground_predicates_lst RPAREN RPAREN
Rule 24    init_def -> LPAREN INIT_KEY ground_predicates_lst RPAREN
Rule 25    goal_def -> LPAREN GOAL_KEY LPAREN AND_KEY ground_predicates_lst RPAREN RPAREN
Rule 26    require_def -> LPAREN REQUIREMENTS_KEY require_key_lst RPAREN
Rule 27    require_key_lst -> require_key require_key_lst
Rule 28    require_key_lst -> require_key
Rule 29    require_key -> STRIPS_KEY
Rule 30    require_key -> EQUALITY_KEY
Rule 31    require_key -> TYPING_KEY
Rule 32    require_key -> PROBABILISTIC_EFFECTS_KEY
Rule 33    types_def -> LPAREN TYPES_KEY names_lst RPAREN
Rule 34    constants_def -> LPAREN CONSTANTS_KEY typed_constants_lst RPAREN
Rule 35    predicates_def -> LPAREN PREDICATES_KEY predicate_def_lst RPAREN
Rule 36    predicate_def_lst -> predicate_def predicate_def_lst
Rule 37    predicate_def_lst -> predicate_def
Rule 38    predicate_def -> LPAREN NAME typed_variables_lst RPAREN
Rule 39    predicate_def -> LPAREN NAME RPAREN
Rule 40    functions_def -> LPAREN FUNCTIONS_KEY function_def_list RPAREN
Rule 41    function_def_list -> function_def function_def_list
Rule 42    function_def_list -> function_def
Rule 43    function_def -> LPAREN NAME VARIABLE HYPHEN NAME RPAREN
Rule 44    function_def -> LPAREN NAME RPAREN
Rule 45    actions_def -> action_def_lst
Rule 46    action_def_lst -> action_def action_def_lst
Rule 47    action_def_lst -> action_def
Rule 48    action_def -> LPAREN ACTION_KEY NAME parameters_def action_def_body RPAREN
Rule 49    parameters_def -> PARAMETERS_KEY LPAREN typed_variables_lst RPAREN
Rule 50    parameters_def -> PARAMETERS_KEY LPAREN RPAREN
Rule 51    action_def_body -> precond_def effects_def
Rule 52    precond_def -> PRECONDITION_KEY LPAREN AND_KEY literals_lst RPAREN
Rule 53    precond_def -> PRECONDITION_KEY literal
Rule 54    effects_def -> EFFECT_KEY effects
Rule 55    effects -> effect
Rule 56    effects -> LPAREN AND_KEY effects_lst RPAREN
Rule 57    effects_lst -> effect effects_lst
Rule 58    effects_lst -> effect
Rule 59    effect -> literal
Rule 60    effect -> LPAREN PROBABILISTIC_KEY probability_list RPAREN
Rule 61    probability_list -> PROBABILITY effects
Rule 62    probability_list -> PROBABILITY effects probability_list
Rule 63    literals_lst -> literal literals_lst
Rule 64    literals_lst -> literal
Rule 65    literal -> LPAREN NOT_KEY predicate RPAREN
Rule 66    literal -> predicate
Rule 67    ground_predicates_lst -> ground_predicate ground_predicates_lst
Rule 68    ground_predicates_lst -> ground_predicate
Rule 69    predicate -> LPAREN NAME variables_lst RPAREN
Rule 70    predicate -> LPAREN EQUALS VARIABLE VARIABLE RPAREN
Rule 71    predicate -> LPAREN NAME RPAREN
Rule 72    ground_predicate -> LPAREN NAME constants_lst RPAREN
Rule 73    ground_predicate -> LPAREN NAME RPAREN
Rule 74    typed_constants_lst -> constants_lst HYPHEN type typed_constants_lst
Rule 75    typed_constants_lst -> constants_lst HYPHEN type
Rule 76    typed_variables_lst -> variables_lst HYPHEN type typed_variables_lst
Rule 77    typed_variables_lst -> variables_lst HYPHEN type
Rule 78    constants_lst -> constant constants_lst
Rule 79    constants_lst -> constant
Rule 80    variables_lst -> VARIABLE variables_lst
Rule 81    variables_lst -> VARIABLE
Rule 82    names_lst -> NAME names_lst
Rule 83    names_lst -> NAME
Rule 84    type -> NAME
Rule 85    constant -> NAME
Rule 86    empty -> <empty>

Terminals, with rules where they appear

ACTION_KEY           : 48
ADL_KEY              : 
AND_KEY              : 23 25 52 56
ASSIGN_KEY           : 
BINARYCOMP           : 
BINARYOP             : 
CONDITIONAL_EFFECT_KEY : 
CONSTANTS_KEY        : 34
DEFINE_KEY           : 3 4
DISJUNCTIVE_PRECONDITIONS_KEY : 
DOMAIN_KEY           : 5
EFFECT_KEY           : 54
EITHER_KEY           : 
EQUALITY_KEY         : 30
EQUALS               : 70
EXISTENTIAL_KEY      : 
EXISTENTIAL_PRECONDITIONS_KEY : 
FORALL_KEY           : 
FUNCTIONS_KEY        : 40
GOALACHIEVED_KEY     : 
GOAL_KEY             : 25
HYPHEN               : 43 74 75 76 77
INCREASE_KEY         : 
INIT_KEY             : 23 24
LPAREN               : 3 4 5 6 22 23 23 24 25 25 26 33 34 35 38 39 40 43 44 48 49 50 52 56 60 65 69 70 71 72 73
MAXIMIZE_KEY         : 
MDP_KEY              : 
METRIC_KEY           : 
MINIMIZE_KEY         : 
NAME                 : 5 6 38 39 43 43 44 48 69 71 72 73 82 83 84 85
NEGATIVE_PRECONDITIONS_KEY : 
NOT_KEY              : 65
NUMBER               : 
OBJECTS_KEY          : 22
PARAMETERS_KEY       : 49 50
PRECONDITION_KEY     : 52 53
PREDICATES_KEY       : 35
PROBABILISTIC_EFFECTS_KEY : 32
PROBABILISTIC_KEY    : 60
PROBABILITY          : 61 62
PROBLEM_KEY          : 6
QUANTIFIED_PRECONDITIONS_KEY : 
REQUIREMENTS_KEY     : 26
REWARDS_KEY          : 
REWARD_KEY           : 
RPAREN               : 3 4 5 6 22 23 23 24 25 25 26 33 34 35 38 39 40 43 44 48 49 50 52 56 60 65 69 70 71 72 73
SCALE_DOWN_KEY       : 
SCALE_UP_KEY         : 
STRIPS_KEY           : 29
TOTALTIME_KEY        : 
TYPES_KEY            : 33
TYPING_KEY           : 31
UNIVERSAL_PRECONDITIONS_KEY : 
VARIABLE             : 43 70 70 80 81
WHEN_KEY             : 
error                : 

Nonterminals, with rules where they appear

action_def           : 46 47
action_def_body      : 48
action_def_lst       : 45 46
actions_def          : 13
constant             : 78 79
constants_def        : 11
constants_lst        : 72 74 75 78
domain               : 1
domain_def           : 3 4
effect               : 55 57 58
effects              : 54 61 62
effects_def          : 51
effects_lst          : 56 57
empty                : 15 21
function_def         : 41 42
function_def_list    : 40 41
functions_def        : 14
goal_def             : 4
ground_predicate     : 67 68
ground_predicates_lst : 23 24 25 67
init_def             : 20
literal              : 53 59 63 64
literals_lst         : 52 63
names_lst            : 33 82
objects_def          : 19
opt_dom_part         : 7 8
opt_dom_parts        : 3 7
opt_prob_part        : 16 17
opt_prob_parts       : 4 16
parameters_def       : 48
pddl                 : 0
precond_def          : 51
predicate            : 65 66
predicate_def        : 36 37
predicate_def_lst    : 35 36
predicates_def       : 12
probability_list     : 60 62
problem              : 2
problem_def          : 4
require_def          : 9 18
require_key          : 27 28
require_key_lst      : 26 27
type                 : 74 75 76 77
typed_constants_lst  : 22 34 74
typed_variables_lst  : 38 49 76
types_def            : 10
variables_lst        : 69 76 77 80

Parsing method: LALR

state 0

    (0) S' -> . pddl
    (1) pddl -> . domain
    (2) pddl -> . problem
    (3) domain -> . LPAREN DEFINE_KEY domain_def opt_dom_parts RPAREN
    (4) problem -> . LPAREN DEFINE_KEY problem_def domain_def opt_prob_parts goal_def RPAREN

    LPAREN          shift and go to state 4

    pddl                           shift and go to state 1
    domain                         shift and go to state 2
    problem                        shift and go to state 3

state 1

    (0) S' -> pddl .



state 2

    (1) pddl -> domain .

    $end            reduce using rule 1 (pddl -> domain .)


state 3

    (2) pddl -> problem .

    $end            reduce using rule 2 (pddl -> problem .)


state 4

    (3) domain -> LPAREN . DEFINE_KEY domain_def opt_dom_parts RPAREN
    (4) problem -> LPAREN . DEFINE_KEY problem_def domain_def opt_prob_parts goal_def RPAREN

    DEFINE_KEY      shift and go to state 5


state 5

    (3) domain -> LPAREN DEFINE_KEY . domain_def opt_dom_parts RPAREN
    (4) problem -> LPAREN DEFINE_KEY . problem_def domain_def opt_prob_parts goal_def RPAREN
    (5) domain_def -> . LPAREN DOMAIN_KEY NAME RPAREN
    (6) problem_def -> . LPAREN PROBLEM_KEY NAME RPAREN

    LPAREN          shift and go to state 6

    domain_def                     shift and go to state 7
    problem_def                    shift and go to state 8

state 6

    (5) domain_def -> LPAREN . DOMAIN_KEY NAME RPAREN
    (6) problem_def -> LPAREN . PROBLEM_KEY NAME RPAREN

    DOMAIN_KEY      shift and go to state 9
    PROBLEM_KEY     shift and go to state 10


state 7

    (3) domain -> LPAREN DEFINE_KEY domain_def . opt_dom_parts RPAREN
    (7) opt_dom_parts -> . opt_dom_part opt_dom_parts
    (8) opt_dom_parts -> . opt_dom_part
    (9) opt_dom_part -> . require_def
    (10) opt_dom_part -> . types_def
    (11) opt_dom_part -> . constants_def
    (12) opt_dom_part -> . predicates_def
    (13) opt_dom_part -> . actions_def
    (14) opt_dom_part -> . functions_def
    (15) opt_dom_part -> . empty
    (26) require_def -> . LPAREN REQUIREMENTS_KEY require_key_lst RPAREN
    (33) types_def -> . LPAREN TYPES_KEY names_lst RPAREN
    (34) constants_def -> . LPAREN CONSTANTS_KEY typed_constants_lst RPAREN
    (35) predicates_def -> . LPAREN PREDICATES_KEY predicate_def_lst RPAREN
    (45) actions_def -> . action_def_lst
    (40) functions_def -> . LPAREN FUNCTIONS_KEY function_def_list RPAREN
    (86) empty -> .
    (46) action_def_lst -> . action_def action_def_lst
    (47) action_def_lst -> . action_def
    (48) action_def -> . LPAREN ACTION_KEY NAME parameters_def action_def_body RPAREN

  ! shift/reduce conflict for LPAREN resolved as shift
    LPAREN          shift and go to state 11
    RPAREN          reduce using rule 86 (empty -> .)

  ! LPAREN          [ reduce using rule 86 (empty -> .) ]

    opt_dom_parts                  shift and go to state 12
    opt_dom_part                   shift and go to state 13
    require_def                    shift and go to state 14
    types_def                      shift and go to state 15
    constants_def                  shift and go to state 16
    predicates_def                 shift and go to state 17
    actions_def                    shift and go to state 18
    functions_def                  shift and go to state 19
    empty                          shift and go to state 20
    action_def_lst                 shift and go to state 21
    action_def                     shift and go to state 22

state 8

    (4) problem -> LPAREN DEFINE_KEY problem_def . domain_def opt_prob_parts goal_def RPAREN
    (5) domain_def -> . LPAREN DOMAIN_KEY NAME RPAREN

    LPAREN          shift and go to state 23

    domain_def                     shift and go to state 24

state 9

    (5) domain_def -> LPAREN DOMAIN_KEY . NAME RPAREN

    NAME            shift and go to state 25


state 10

    (6) problem_def -> LPAREN PROBLEM_KEY . NAME RPAREN

    NAME            shift and go to state 26


state 11

    (26) require_def -> LPAREN . REQUIREMENTS_KEY require_key_lst RPAREN
    (33) types_def -> LPAREN . TYPES_KEY names_lst RPAREN
    (34) constants_def -> LPAREN . CONSTANTS_KEY typed_constants_lst RPAREN
    (35) predicates_def -> LPAREN . PREDICATES_KEY predicate_def_lst RPAREN
    (40) functions_def -> LPAREN . FUNCTIONS_KEY function_def_list RPAREN
    (48) action_def -> LPAREN . ACTION_KEY NAME parameters_def action_def_body RPAREN

    REQUIREMENTS_KEY shift and go to state 27
    TYPES_KEY       shift and go to state 28
    CONSTANTS_KEY   shift and go to state 29
    PREDICATES_KEY  shift and go to state 30
    FUNCTIONS_KEY   shift and go to state 31
    ACTION_KEY      shift and go to state 32


state 12

    (3) domain -> LPAREN DEFINE_KEY domain_def opt_dom_parts . RPAREN

    RPAREN          shift and go to state 33


state 13

    (7) opt_dom_parts -> opt_dom_part . opt_dom_parts
    (8) opt_dom_parts -> opt_dom_part .
    (7) opt_dom_parts -> . opt_dom_part opt_dom_parts
    (8) opt_dom_parts -> . opt_dom_part
    (9) opt_dom_part -> . require_def
    (10) opt_dom_part -> . types_def
    (11) opt_dom_part -> . constants_def
    (12) opt_dom_part -> . predicates_def
    (13) opt_dom_part -> . actions_def
    (14) opt_dom_part -> . functions_def
    (15) opt_dom_part -> . empty
    (26) require_def -> . LPAREN REQUIREMENTS_KEY require_key_lst RPAREN
    (33) types_def -> . LPAREN TYPES_KEY names_lst RPAREN
    (34) constants_def -> . LPAREN CONSTANTS_KEY typed_constants_lst RPAREN
    (35) predicates_def -> . LPAREN PREDICATES_KEY predicate_def_lst RPAREN
    (45) actions_def -> . action_def_lst
    (40) functions_def -> . LPAREN FUNCTIONS_KEY function_def_list RPAREN
    (86) empty -> .
    (46) action_def_lst -> . action_def action_def_lst
    (47) action_def_lst -> . action_def
    (48) action_def -> . LPAREN ACTION_KEY NAME parameters_def action_def_body RPAREN

  ! shift/reduce conflict for LPAREN resolved as shift
  ! reduce/reduce conflict for RPAREN resolved using rule 8 (opt_dom_parts -> opt_dom_part .)
    RPAREN          reduce using rule 8 (opt_dom_parts -> opt_dom_part .)
    LPAREN          shift and go to state 11

  ! LPAREN          [ reduce using rule 86 (empty -> .) ]
  ! RPAREN          [ reduce using rule 86 (empty -> .) ]

    opt_dom_part                   shift and go to state 13
    opt_dom_parts                  shift and go to state 34
    require_def                    shift and go to state 14
    types_def                      shift and go to state 15
    constants_def                  shift and go to state 16
    predicates_def                 shift and go to state 17
    actions_def                    shift and go to state 18
    functions_def                  shift and go to state 19
    empty                          shift and go to state 20
    action_def_lst                 shift and go to state 21
    action_def                     shift and go to state 22

state 14

    (9) opt_dom_part -> require_def .

    LPAREN          reduce using rule 9 (opt_dom_part -> require_def .)
    RPAREN          reduce using rule 9 (opt_dom_part -> require_def .)


state 15

    (10) opt_dom_part -> types_def .

    LPAREN          reduce using rule 10 (opt_dom_part -> types_def .)
    RPAREN          reduce using rule 10 (opt_dom_part -> types_def .)


state 16

    (11) opt_dom_part -> constants_def .

    LPAREN          reduce using rule 11 (opt_dom_part -> constants_def .)
    RPAREN          reduce using rule 11 (opt_dom_part -> constants_def .)


state 17

    (12) opt_dom_part -> predicates_def .

    LPAREN          reduce using rule 12 (opt_dom_part -> predicates_def .)
    RPAREN          reduce using rule 12 (opt_dom_part -> predicates_def .)


state 18

    (13) opt_dom_part -> actions_def .

    LPAREN          reduce using rule 13 (opt_dom_part -> actions_def .)
    RPAREN          reduce using rule 13 (opt_dom_part -> actions_def .)


state 19

    (14) opt_dom_part -> functions_def .

    LPAREN          reduce using rule 14 (opt_dom_part -> functions_def .)
    RPAREN          reduce using rule 14 (opt_dom_part -> functions_def .)


state 20

    (15) opt_dom_part -> empty .

    LPAREN          reduce using rule 15 (opt_dom_part -> empty .)
    RPAREN          reduce using rule 15 (opt_dom_part -> empty .)


state 21

    (45) actions_def -> action_def_lst .

    LPAREN          reduce using rule 45 (actions_def -> action_def_lst .)
    RPAREN          reduce using rule 45 (actions_def -> action_def_lst .)


state 22

    (46) action_def_lst -> action_def . action_def_lst
    (47) action_def_lst -> action_def .
    (46) action_def_lst -> . action_def action_def_lst
    (47) action_def_lst -> . action_def
    (48) action_def -> . LPAREN ACTION_KEY NAME parameters_def action_def_body RPAREN

  ! shift/reduce conflict for LPAREN resolved as shift
    RPAREN          reduce using rule 47 (action_def_lst -> action_def .)
    LPAREN          shift and go to state 36

  ! LPAREN          [ reduce using rule 47 (action_def_lst -> action_def .) ]

    action_def                     shift and go to state 22
    action_def_lst                 shift and go to state 35

state 23

    (5) domain_def -> LPAREN . DOMAIN_KEY NAME RPAREN

    DOMAIN_KEY      shift and go to state 9


state 24

    (4) problem -> LPAREN DEFINE_KEY problem_def domain_def . opt_prob_parts goal_def RPAREN
    (16) opt_prob_parts -> . opt_prob_parts opt_prob_part
    (17) opt_prob_parts -> . opt_prob_part
    (18) opt_prob_part -> . require_def
    (19) opt_prob_part -> . objects_def
    (20) opt_prob_part -> . init_def
    (21) opt_prob_part -> . empty
    (26) require_def -> . LPAREN REQUIREMENTS_KEY require_key_lst RPAREN
    (22) objects_def -> . LPAREN OBJECTS_KEY typed_constants_lst RPAREN
    (23) init_def -> . LPAREN INIT_KEY LPAREN AND_KEY ground_predicates_lst RPAREN RPAREN
    (24) init_def -> . LPAREN INIT_KEY ground_predicates_lst RPAREN
    (86) empty -> .

  ! shift/reduce conflict for LPAREN resolved as shift
    LPAREN          shift and go to state 37

  ! LPAREN          [ reduce using rule 86 (empty -> .) ]

    opt_prob_parts                 shift and go to state 38
    opt_prob_part                  shift and go to state 39
    require_def                    shift and go to state 40
    objects_def                    shift and go to state 41
    init_def                       shift and go to state 42
    empty                          shift and go to state 43

state 25

    (5) domain_def -> LPAREN DOMAIN_KEY NAME . RPAREN

    RPAREN          shift and go to state 44


state 26

    (6) problem_def -> LPAREN PROBLEM_KEY NAME . RPAREN

    RPAREN          shift and go to state 45


state 27

    (26) require_def -> LPAREN REQUIREMENTS_KEY . require_key_lst RPAREN
    (27) require_key_lst -> . require_key require_key_lst
    (28) require_key_lst -> . require_key
    (29) require_key -> . STRIPS_KEY
    (30) require_key -> . EQUALITY_KEY
    (31) require_key -> . TYPING_KEY
    (32) require_key -> . PROBABILISTIC_EFFECTS_KEY

    STRIPS_KEY      shift and go to state 48
    EQUALITY_KEY    shift and go to state 49
    TYPING_KEY      shift and go to state 50
    PROBABILISTIC_EFFECTS_KEY shift and go to state 51

    require_key_lst                shift and go to state 46
    require_key                    shift and go to state 47

state 28

    (33) types_def -> LPAREN TYPES_KEY . names_lst RPAREN
    (82) names_lst -> . NAME names_lst
    (83) names_lst -> . NAME

    NAME            shift and go to state 53

    names_lst                      shift and go to state 52

state 29

    (34) constants_def -> LPAREN CONSTANTS_KEY . typed_constants_lst RPAREN
    (74) typed_constants_lst -> . constants_lst HYPHEN type typed_constants_lst
    (75) typed_constants_lst -> . constants_lst HYPHEN type
    (78) constants_lst -> . constant constants_lst
    (79) constants_lst -> . constant
    (85) constant -> . NAME

    NAME            shift and go to state 57

    typed_constants_lst            shift and go to state 54
    constants_lst                  shift and go to state 55
    constant                       shift and go to state 56

state 30

    (35) predicates_def -> LPAREN PREDICATES_KEY . predicate_def_lst RPAREN
    (36) predicate_def_lst -> . predicate_def predicate_def_lst
    (37) predicate_def_lst -> . predicate_def
    (38) predicate_def -> . LPAREN NAME typed_variables_lst RPAREN
    (39) predicate_def -> . LPAREN NAME RPAREN

    LPAREN          shift and go to state 58

    predicate_def_lst              shift and go to state 59
    predicate_def                  shift and go to state 60

state 31

    (40) functions_def -> LPAREN FUNCTIONS_KEY . function_def_list RPAREN
    (41) function_def_list -> . function_def function_def_list
    (42) function_def_list -> . function_def
    (43) function_def -> . LPAREN NAME VARIABLE HYPHEN NAME RPAREN
    (44) function_def -> . LPAREN NAME RPAREN

    LPAREN          shift and go to state 61

    function_def_list              shift and go to state 62
    function_def                   shift and go to state 63

state 32

    (48) action_def -> LPAREN ACTION_KEY . NAME parameters_def action_def_body RPAREN

    NAME            shift and go to state 64


state 33

    (3) domain -> LPAREN DEFINE_KEY domain_def opt_dom_parts RPAREN .

    $end            reduce using rule 3 (domain -> LPAREN DEFINE_KEY domain_def opt_dom_parts RPAREN .)


state 34

    (7) opt_dom_parts -> opt_dom_part opt_dom_parts .

    RPAREN          reduce using rule 7 (opt_dom_parts -> opt_dom_part opt_dom_parts .)


state 35

    (46) action_def_lst -> action_def action_def_lst .

    LPAREN          reduce using rule 46 (action_def_lst -> action_def action_def_lst .)
    RPAREN          reduce using rule 46 (action_def_lst -> action_def action_def_lst .)


state 36

    (48) action_def -> LPAREN . ACTION_KEY NAME parameters_def action_def_body RPAREN

    ACTION_KEY      shift and go to state 32


state 37

    (26) require_def -> LPAREN . REQUIREMENTS_KEY require_key_lst RPAREN
    (22) objects_def -> LPAREN . OBJECTS_KEY typed_constants_lst RPAREN
    (23) init_def -> LPAREN . INIT_KEY LPAREN AND_KEY ground_predicates_lst RPAREN RPAREN
    (24) init_def -> LPAREN . INIT_KEY ground_predicates_lst RPAREN

    REQUIREMENTS_KEY shift and go to state 27
    OBJECTS_KEY     shift and go to state 65
    INIT_KEY        shift and go to state 66


state 38

    (4) problem -> LPAREN DEFINE_KEY problem_def domain_def opt_prob_parts . goal_def RPAREN
    (16) opt_prob_parts -> opt_prob_parts . opt_prob_part
    (25) goal_def -> . LPAREN GOAL_KEY LPAREN AND_KEY ground_predicates_lst RPAREN RPAREN
    (18) opt_prob_part -> . require_def
    (19) opt_prob_part -> . objects_def
    (20) opt_prob_part -> . init_def
    (21) opt_prob_part -> . empty
    (26) require_def -> . LPAREN REQUIREMENTS_KEY require_key_lst RPAREN
    (22) objects_def -> . LPAREN OBJECTS_KEY typed_constants_lst RPAREN
    (23) init_def -> . LPAREN INIT_KEY LPAREN AND_KEY ground_predicates_lst RPAREN RPAREN
    (24) init_def -> . LPAREN INIT_KEY ground_predicates_lst RPAREN
    (86) empty -> .

  ! shift/reduce conflict for LPAREN resolved as shift
    LPAREN          shift and go to state 67

  ! LPAREN          [ reduce using rule 86 (empty -> .) ]

    goal_def                       shift and go to state 68
    opt_prob_part                  shift and go to state 69
    require_def                    shift and go to state 40
    objects_def                    shift and go to state 41
    init_def                       shift and go to state 42
    empty                          shift and go to state 43

state 39

    (17) opt_prob_parts -> opt_prob_part .

    LPAREN          reduce using rule 17 (opt_prob_parts -> opt_prob_part .)


state 40

    (18) opt_prob_part -> require_def .

    LPAREN          reduce using rule 18 (opt_prob_part -> require_def .)


state 41

    (19) opt_prob_part -> objects_def .

    LPAREN          reduce using rule 19 (opt_prob_part -> objects_def .)


state 42

    (20) opt_prob_part -> init_def .

    LPAREN          reduce using rule 20 (opt_prob_part -> init_def .)


state 43

    (21) opt_prob_part -> empty .

    LPAREN          reduce using rule 21 (opt_prob_part -> empty .)


state 44

    (5) domain_def -> LPAREN DOMAIN_KEY NAME RPAREN .

    LPAREN          reduce using rule 5 (domain_def -> LPAREN DOMAIN_KEY NAME RPAREN .)
    RPAREN          reduce using rule 5 (domain_def -> LPAREN DOMAIN_KEY NAME RPAREN .)


state 45

    (6) problem_def -> LPAREN PROBLEM_KEY NAME RPAREN .

    LPAREN          reduce using rule 6 (problem_def -> LPAREN PROBLEM_KEY NAME RPAREN .)


state 46

    (26) require_def -> LPAREN REQUIREMENTS_KEY require_key_lst . RPAREN

    RPAREN          shift and go to state 70


state 47

    (27) require_key_lst -> require_key . require_key_lst
    (28) require_key_lst -> require_key .
    (27) require_key_lst -> . require_key require_key_lst
    (28) require_key_lst -> . require_key
    (29) require_key -> . STRIPS_KEY
    (30) require_key -> . EQUALITY_KEY
    (31) require_key -> . TYPING_KEY
    (32) require_key -> . PROBABILISTIC_EFFECTS_KEY

    RPAREN          reduce using rule 28 (require_key_lst -> require_key .)
    STRIPS_KEY      shift and go to state 48
    EQUALITY_KEY    shift and go to state 49
    TYPING_KEY      shift and go to state 50
    PROBABILISTIC_EFFECTS_KEY shift and go to state 51

    require_key                    shift and go to state 47
    require_key_lst                shift and go to state 71

state 48

    (29) require_key -> STRIPS_KEY .

    STRIPS_KEY      reduce using rule 29 (require_key -> STRIPS_KEY .)
    EQUALITY_KEY    reduce using rule 29 (require_key -> STRIPS_KEY .)
    TYPING_KEY      reduce using rule 29 (require_key -> STRIPS_KEY .)
    PROBABILISTIC_EFFECTS_KEY reduce using rule 29 (require_key -> STRIPS_KEY .)
    RPAREN          reduce using rule 29 (require_key -> STRIPS_KEY .)


state 49

    (30) require_key -> EQUALITY_KEY .

    STRIPS_KEY      reduce using rule 30 (require_key -> EQUALITY_KEY .)
    EQUALITY_KEY    reduce using rule 30 (require_key -> EQUALITY_KEY .)
    TYPING_KEY      reduce using rule 30 (require_key -> EQUALITY_KEY .)
    PROBABILISTIC_EFFECTS_KEY reduce using rule 30 (require_key -> EQUALITY_KEY .)
    RPAREN          reduce using rule 30 (require_key -> EQUALITY_KEY .)


state 50

    (31) require_key -> TYPING_KEY .

    STRIPS_KEY      reduce using rule 31 (require_key -> TYPING_KEY .)
    EQUALITY_KEY    reduce using rule 31 (require_key -> TYPING_KEY .)
    TYPING_KEY      reduce using rule 31 (require_key -> TYPING_KEY .)
    PROBABILISTIC_EFFECTS_KEY reduce using rule 31 (require_key -> TYPING_KEY .)
    RPAREN          reduce using rule 31 (require_key -> TYPING_KEY .)


state 51

    (32) require_key -> PROBABILISTIC_EFFECTS_KEY .

    STRIPS_KEY      reduce using rule 32 (require_key -> PROBABILISTIC_EFFECTS_KEY .)
    EQUALITY_KEY    reduce using rule 32 (require_key -> PROBABILISTIC_EFFECTS_KEY .)
    TYPING_KEY      reduce using rule 32 (require_key -> PROBABILISTIC_EFFECTS_KEY .)
    PROBABILISTIC_EFFECTS_KEY reduce using rule 32 (require_key -> PROBABILISTIC_EFFECTS_KEY .)
    RPAREN          reduce using rule 32 (require_key -> PROBABILISTIC_EFFECTS_KEY .)


state 52

    (33) types_def -> LPAREN TYPES_KEY names_lst . RPAREN

    RPAREN          shift and go to state 72


state 53

    (82) names_lst -> NAME . names_lst
    (83) names_lst -> NAME .
    (82) names_lst -> . NAME names_lst
    (83) names_lst -> . NAME

    RPAREN          reduce using rule 83 (names_lst -> NAME .)
    NAME            shift and go to state 53

    names_lst                      shift and go to state 73

state 54

    (34) constants_def -> LPAREN CONSTANTS_KEY typed_constants_lst . RPAREN

    RPAREN          shift and go to state 74


state 55

    (74) typed_constants_lst -> constants_lst . HYPHEN type typed_constants_lst
    (75) typed_constants_lst -> constants_lst . HYPHEN type

    HYPHEN          shift and go to state 75


state 56

    (78) constants_lst -> constant . constants_lst
    (79) constants_lst -> constant .
    (78) constants_lst -> . constant constants_lst
    (79) constants_lst -> . constant
    (85) constant -> . NAME

    HYPHEN          reduce using rule 79 (constants_lst -> constant .)
    RPAREN          reduce using rule 79 (constants_lst -> constant .)
    NAME            shift and go to state 57

    constant                       shift and go to state 56
    constants_lst                  shift and go to state 76

state 57

    (85) constant -> NAME .

    NAME            reduce using rule 85 (constant -> NAME .)
    HYPHEN          reduce using rule 85 (constant -> NAME .)
    RPAREN          reduce using rule 85 (constant -> NAME .)


state 58

    (38) predicate_def -> LPAREN . NAME typed_variables_lst RPAREN
    (39) predicate_def -> LPAREN . NAME RPAREN

    NAME            shift and go to state 77


state 59

    (35) predicates_def -> LPAREN PREDICATES_KEY predicate_def_lst . RPAREN

    RPAREN          shift and go to state 78


state 60

    (36) predicate_def_lst -> predicate_def . predicate_def_lst
    (37) predicate_def_lst -> predicate_def .
    (36) predicate_def_lst -> . predicate_def predicate_def_lst
    (37) predicate_def_lst -> . predicate_def
    (38) predicate_def -> . LPAREN NAME typed_variables_lst RPAREN
    (39) predicate_def -> . LPAREN NAME RPAREN

    RPAREN          reduce using rule 37 (predicate_def_lst -> predicate_def .)
    LPAREN          shift and go to state 58

    predicate_def                  shift and go to state 60
    predicate_def_lst              shift and go to state 79

state 61

    (43) function_def -> LPAREN . NAME VARIABLE HYPHEN NAME RPAREN
    (44) function_def -> LPAREN . NAME RPAREN

    NAME            shift and go to state 80


state 62

    (40) functions_def -> LPAREN FUNCTIONS_KEY function_def_list . RPAREN

    RPAREN          shift and go to state 81


state 63

    (41) function_def_list -> function_def . function_def_list
    (42) function_def_list -> function_def .
    (41) function_def_list -> . function_def function_def_list
    (42) function_def_list -> . function_def
    (43) function_def -> . LPAREN NAME VARIABLE HYPHEN NAME RPAREN
    (44) function_def -> . LPAREN NAME RPAREN

    RPAREN          reduce using rule 42 (function_def_list -> function_def .)
    LPAREN          shift and go to state 61

    function_def                   shift and go to state 63
    function_def_list              shift and go to state 82

state 64

    (48) action_def -> LPAREN ACTION_KEY NAME . parameters_def action_def_body RPAREN
    (49) parameters_def -> . PARAMETERS_KEY LPAREN typed_variables_lst RPAREN
    (50) parameters_def -> . PARAMETERS_KEY LPAREN RPAREN

    PARAMETERS_KEY  shift and go to state 84

    parameters_def                 shift and go to state 83

state 65

    (22) objects_def -> LPAREN OBJECTS_KEY . typed_constants_lst RPAREN
    (74) typed_constants_lst -> . constants_lst HYPHEN type typed_constants_lst
    (75) typed_constants_lst -> . constants_lst HYPHEN type
    (78) constants_lst -> . constant constants_lst
    (79) constants_lst -> . constant
    (85) constant -> . NAME

    NAME            shift and go to state 57

    typed_constants_lst            shift and go to state 85
    constants_lst                  shift and go to state 55
    constant                       shift and go to state 56

state 66

    (23) init_def -> LPAREN INIT_KEY . LPAREN AND_KEY ground_predicates_lst RPAREN RPAREN
    (24) init_def -> LPAREN INIT_KEY . ground_predicates_lst RPAREN
    (67) ground_predicates_lst -> . ground_predicate ground_predicates_lst
    (68) ground_predicates_lst -> . ground_predicate
    (72) ground_predicate -> . LPAREN NAME constants_lst RPAREN
    (73) ground_predicate -> . LPAREN NAME RPAREN

    LPAREN          shift and go to state 86

    ground_predicates_lst          shift and go to state 87
    ground_predicate               shift and go to state 88

state 67

    (25) goal_def -> LPAREN . GOAL_KEY LPAREN AND_KEY ground_predicates_lst RPAREN RPAREN
    (26) require_def -> LPAREN . REQUIREMENTS_KEY require_key_lst RPAREN
    (22) objects_def -> LPAREN . OBJECTS_KEY typed_constants_lst RPAREN
    (23) init_def -> LPAREN . INIT_KEY LPAREN AND_KEY ground_predicates_lst RPAREN RPAREN
    (24) init_def -> LPAREN . INIT_KEY ground_predicates_lst RPAREN

    GOAL_KEY        shift and go to state 89
    REQUIREMENTS_KEY shift and go to state 27
    OBJECTS_KEY     shift and go to state 65
    INIT_KEY        shift and go to state 66


state 68

    (4) problem -> LPAREN DEFINE_KEY problem_def domain_def opt_prob_parts goal_def . RPAREN

    RPAREN          shift and go to state 90


state 69

    (16) opt_prob_parts -> opt_prob_parts opt_prob_part .

    LPAREN          reduce using rule 16 (opt_prob_parts -> opt_prob_parts opt_prob_part .)


state 70

    (26) require_def -> LPAREN REQUIREMENTS_KEY require_key_lst RPAREN .

    LPAREN          reduce using rule 26 (require_def -> LPAREN REQUIREMENTS_KEY require_key_lst RPAREN .)
    RPAREN          reduce using rule 26 (require_def -> LPAREN REQUIREMENTS_KEY require_key_lst RPAREN .)


state 71

    (27) require_key_lst -> require_key require_key_lst .

    RPAREN          reduce using rule 27 (require_key_lst -> require_key require_key_lst .)


state 72

    (33) types_def -> LPAREN TYPES_KEY names_lst RPAREN .

    LPAREN          reduce using rule 33 (types_def -> LPAREN TYPES_KEY names_lst RPAREN .)
    RPAREN          reduce using rule 33 (types_def -> LPAREN TYPES_KEY names_lst RPAREN .)


state 73

    (82) names_lst -> NAME names_lst .

    RPAREN          reduce using rule 82 (names_lst -> NAME names_lst .)


state 74

    (34) constants_def -> LPAREN CONSTANTS_KEY typed_constants_lst RPAREN .

    LPAREN          reduce using rule 34 (constants_def -> LPAREN CONSTANTS_KEY typed_constants_lst RPAREN .)
    RPAREN          reduce using rule 34 (constants_def -> LPAREN CONSTANTS_KEY typed_constants_lst RPAREN .)


state 75

    (74) typed_constants_lst -> constants_lst HYPHEN . type typed_constants_lst
    (75) typed_constants_lst -> constants_lst HYPHEN . type
    (84) type -> . NAME

    NAME            shift and go to state 92

    type                           shift and go to state 91

state 76

    (78) constants_lst -> constant constants_lst .

    HYPHEN          reduce using rule 78 (constants_lst -> constant constants_lst .)
    RPAREN          reduce using rule 78 (constants_lst -> constant constants_lst .)


state 77

    (38) predicate_def -> LPAREN NAME . typed_variables_lst RPAREN
    (39) predicate_def -> LPAREN NAME . RPAREN
    (76) typed_variables_lst -> . variables_lst HYPHEN type typed_variables_lst
    (77) typed_variables_lst -> . variables_lst HYPHEN type
    (80) variables_lst -> . VARIABLE variables_lst
    (81) variables_lst -> . VARIABLE

    RPAREN          shift and go to state 94
    VARIABLE        shift and go to state 96

    typed_variables_lst            shift and go to state 93
    variables_lst                  shift and go to state 95

state 78

    (35) predicates_def -> LPAREN PREDICATES_KEY predicate_def_lst RPAREN .

    LPAREN          reduce using rule 35 (predicates_def -> LPAREN PREDICATES_KEY predicate_def_lst RPAREN .)
    RPAREN          reduce using rule 35 (predicates_def -> LPAREN PREDICATES_KEY predicate_def_lst RPAREN .)


state 79

    (36) predicate_def_lst -> predicate_def predicate_def_lst .

    RPAREN          reduce using rule 36 (predicate_def_lst -> predicate_def predicate_def_lst .)


state 80

    (43) function_def -> LPAREN NAME . VARIABLE HYPHEN NAME RPAREN
    (44) function_def -> LPAREN NAME . RPAREN

    VARIABLE        shift and go to state 97
    RPAREN          shift and go to state 98


state 81

    (40) functions_def -> LPAREN FUNCTIONS_KEY function_def_list RPAREN .

    LPAREN          reduce using rule 40 (functions_def -> LPAREN FUNCTIONS_KEY function_def_list RPAREN .)
    RPAREN          reduce using rule 40 (functions_def -> LPAREN FUNCTIONS_KEY function_def_list RPAREN .)


state 82

    (41) function_def_list -> function_def function_def_list .

    RPAREN          reduce using rule 41 (function_def_list -> function_def function_def_list .)


state 83

    (48) action_def -> LPAREN ACTION_KEY NAME parameters_def . action_def_body RPAREN
    (51) action_def_body -> . precond_def effects_def
    (52) precond_def -> . PRECONDITION_KEY LPAREN AND_KEY literals_lst RPAREN
    (53) precond_def -> . PRECONDITION_KEY literal

    PRECONDITION_KEY shift and go to state 101

    action_def_body                shift and go to state 99
    precond_def                    shift and go to state 100

state 84

    (49) parameters_def -> PARAMETERS_KEY . LPAREN typed_variables_lst RPAREN
    (50) parameters_def -> PARAMETERS_KEY . LPAREN RPAREN

    LPAREN          shift and go to state 102


state 85

    (22) objects_def -> LPAREN OBJECTS_KEY typed_constants_lst . RPAREN

    RPAREN          shift and go to state 103


state 86

    (23) init_def -> LPAREN INIT_KEY LPAREN . AND_KEY ground_predicates_lst RPAREN RPAREN
    (72) ground_predicate -> LPAREN . NAME constants_lst RPAREN
    (73) ground_predicate -> LPAREN . NAME RPAREN

    AND_KEY         shift and go to state 104
    NAME            shift and go to state 105


state 87

    (24) init_def -> LPAREN INIT_KEY ground_predicates_lst . RPAREN

    RPAREN          shift and go to state 106


state 88

    (67) ground_predicates_lst -> ground_predicate . ground_predicates_lst
    (68) ground_predicates_lst -> ground_predicate .
    (67) ground_predicates_lst -> . ground_predicate ground_predicates_lst
    (68) ground_predicates_lst -> . ground_predicate
    (72) ground_predicate -> . LPAREN NAME constants_lst RPAREN
    (73) ground_predicate -> . LPAREN NAME RPAREN

    RPAREN          reduce using rule 68 (ground_predicates_lst -> ground_predicate .)
    LPAREN          shift and go to state 108

    ground_predicate               shift and go to state 88
    ground_predicates_lst          shift and go to state 107

state 89

    (25) goal_def -> LPAREN GOAL_KEY . LPAREN AND_KEY ground_predicates_lst RPAREN RPAREN

    LPAREN          shift and go to state 109


state 90

    (4) problem -> LPAREN DEFINE_KEY problem_def domain_def opt_prob_parts goal_def RPAREN .

    $end            reduce using rule 4 (problem -> LPAREN DEFINE_KEY problem_def domain_def opt_prob_parts goal_def RPAREN .)


state 91

    (74) typed_constants_lst -> constants_lst HYPHEN type . typed_constants_lst
    (75) typed_constants_lst -> constants_lst HYPHEN type .
    (74) typed_constants_lst -> . constants_lst HYPHEN type typed_constants_lst
    (75) typed_constants_lst -> . constants_lst HYPHEN type
    (78) constants_lst -> . constant constants_lst
    (79) constants_lst -> . constant
    (85) constant -> . NAME

    RPAREN          reduce using rule 75 (typed_constants_lst -> constants_lst HYPHEN type .)
    NAME            shift and go to state 57

    constants_lst                  shift and go to state 55
    typed_constants_lst            shift and go to state 110
    constant                       shift and go to state 56

state 92

    (84) type -> NAME .

    NAME            reduce using rule 84 (type -> NAME .)
    RPAREN          reduce using rule 84 (type -> NAME .)
    VARIABLE        reduce using rule 84 (type -> NAME .)


state 93

    (38) predicate_def -> LPAREN NAME typed_variables_lst . RPAREN

    RPAREN          shift and go to state 111


state 94

    (39) predicate_def -> LPAREN NAME RPAREN .

    LPAREN          reduce using rule 39 (predicate_def -> LPAREN NAME RPAREN .)
    RPAREN          reduce using rule 39 (predicate_def -> LPAREN NAME RPAREN .)


state 95

    (76) typed_variables_lst -> variables_lst . HYPHEN type typed_variables_lst
    (77) typed_variables_lst -> variables_lst . HYPHEN type

    HYPHEN          shift and go to state 112


state 96

    (80) variables_lst -> VARIABLE . variables_lst
    (81) variables_lst -> VARIABLE .
    (80) variables_lst -> . VARIABLE variables_lst
    (81) variables_lst -> . VARIABLE

    HYPHEN          reduce using rule 81 (variables_lst -> VARIABLE .)
    RPAREN          reduce using rule 81 (variables_lst -> VARIABLE .)
    VARIABLE        shift and go to state 96

    variables_lst                  shift and go to state 113

state 97

    (43) function_def -> LPAREN NAME VARIABLE . HYPHEN NAME RPAREN

    HYPHEN          shift and go to state 114


state 98

    (44) function_def -> LPAREN NAME RPAREN .

    LPAREN          reduce using rule 44 (function_def -> LPAREN NAME RPAREN .)
    RPAREN          reduce using rule 44 (function_def -> LPAREN NAME RPAREN .)


state 99

    (48) action_def -> LPAREN ACTION_KEY NAME parameters_def action_def_body . RPAREN

    RPAREN          shift and go to state 115


state 100

    (51) action_def_body -> precond_def . effects_def
    (54) effects_def -> . EFFECT_KEY effects

    EFFECT_KEY      shift and go to state 117

    effects_def                    shift and go to state 116

state 101

    (52) precond_def -> PRECONDITION_KEY . LPAREN AND_KEY literals_lst RPAREN
    (53) precond_def -> PRECONDITION_KEY . literal
    (65) literal -> . LPAREN NOT_KEY predicate RPAREN
    (66) literal -> . predicate
    (69) predicate -> . LPAREN NAME variables_lst RPAREN
    (70) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (71) predicate -> . LPAREN NAME RPAREN

    LPAREN          shift and go to state 118

    literal                        shift and go to state 119
    predicate                      shift and go to state 120

state 102

    (49) parameters_def -> PARAMETERS_KEY LPAREN . typed_variables_lst RPAREN
    (50) parameters_def -> PARAMETERS_KEY LPAREN . RPAREN
    (76) typed_variables_lst -> . variables_lst HYPHEN type typed_variables_lst
    (77) typed_variables_lst -> . variables_lst HYPHEN type
    (80) variables_lst -> . VARIABLE variables_lst
    (81) variables_lst -> . VARIABLE

    RPAREN          shift and go to state 122
    VARIABLE        shift and go to state 96

    typed_variables_lst            shift and go to state 121
    variables_lst                  shift and go to state 95

state 103

    (22) objects_def -> LPAREN OBJECTS_KEY typed_constants_lst RPAREN .

    LPAREN          reduce using rule 22 (objects_def -> LPAREN OBJECTS_KEY typed_constants_lst RPAREN .)


state 104

    (23) init_def -> LPAREN INIT_KEY LPAREN AND_KEY . ground_predicates_lst RPAREN RPAREN
    (67) ground_predicates_lst -> . ground_predicate ground_predicates_lst
    (68) ground_predicates_lst -> . ground_predicate
    (72) ground_predicate -> . LPAREN NAME constants_lst RPAREN
    (73) ground_predicate -> . LPAREN NAME RPAREN

    LPAREN          shift and go to state 108

    ground_predicates_lst          shift and go to state 123
    ground_predicate               shift and go to state 88

state 105

    (72) ground_predicate -> LPAREN NAME . constants_lst RPAREN
    (73) ground_predicate -> LPAREN NAME . RPAREN
    (78) constants_lst -> . constant constants_lst
    (79) constants_lst -> . constant
    (85) constant -> . NAME

    RPAREN          shift and go to state 125
    NAME            shift and go to state 57

    constants_lst                  shift and go to state 124
    constant                       shift and go to state 56

state 106

    (24) init_def -> LPAREN INIT_KEY ground_predicates_lst RPAREN .

    LPAREN          reduce using rule 24 (init_def -> LPAREN INIT_KEY ground_predicates_lst RPAREN .)


state 107

    (67) ground_predicates_lst -> ground_predicate ground_predicates_lst .

    RPAREN          reduce using rule 67 (ground_predicates_lst -> ground_predicate ground_predicates_lst .)


state 108

    (72) ground_predicate -> LPAREN . NAME constants_lst RPAREN
    (73) ground_predicate -> LPAREN . NAME RPAREN

    NAME            shift and go to state 105


state 109

    (25) goal_def -> LPAREN GOAL_KEY LPAREN . AND_KEY ground_predicates_lst RPAREN RPAREN

    AND_KEY         shift and go to state 126


state 110

    (74) typed_constants_lst -> constants_lst HYPHEN type typed_constants_lst .

    RPAREN          reduce using rule 74 (typed_constants_lst -> constants_lst HYPHEN type typed_constants_lst .)


state 111

    (38) predicate_def -> LPAREN NAME typed_variables_lst RPAREN .

    LPAREN          reduce using rule 38 (predicate_def -> LPAREN NAME typed_variables_lst RPAREN .)
    RPAREN          reduce using rule 38 (predicate_def -> LPAREN NAME typed_variables_lst RPAREN .)


state 112

    (76) typed_variables_lst -> variables_lst HYPHEN . type typed_variables_lst
    (77) typed_variables_lst -> variables_lst HYPHEN . type
    (84) type -> . NAME

    NAME            shift and go to state 92

    type                           shift and go to state 127

state 113

    (80) variables_lst -> VARIABLE variables_lst .

    HYPHEN          reduce using rule 80 (variables_lst -> VARIABLE variables_lst .)
    RPAREN          reduce using rule 80 (variables_lst -> VARIABLE variables_lst .)


state 114

    (43) function_def -> LPAREN NAME VARIABLE HYPHEN . NAME RPAREN

    NAME            shift and go to state 128


state 115

    (48) action_def -> LPAREN ACTION_KEY NAME parameters_def action_def_body RPAREN .

    LPAREN          reduce using rule 48 (action_def -> LPAREN ACTION_KEY NAME parameters_def action_def_body RPAREN .)
    RPAREN          reduce using rule 48 (action_def -> LPAREN ACTION_KEY NAME parameters_def action_def_body RPAREN .)


state 116

    (51) action_def_body -> precond_def effects_def .

    RPAREN          reduce using rule 51 (action_def_body -> precond_def effects_def .)


state 117

    (54) effects_def -> EFFECT_KEY . effects
    (55) effects -> . effect
    (56) effects -> . LPAREN AND_KEY effects_lst RPAREN
    (59) effect -> . literal
    (60) effect -> . LPAREN PROBABILISTIC_KEY probability_list RPAREN
    (65) literal -> . LPAREN NOT_KEY predicate RPAREN
    (66) literal -> . predicate
    (69) predicate -> . LPAREN NAME variables_lst RPAREN
    (70) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (71) predicate -> . LPAREN NAME RPAREN

    LPAREN          shift and go to state 131

    effects                        shift and go to state 129
    effect                         shift and go to state 130
    literal                        shift and go to state 132
    predicate                      shift and go to state 120

state 118

    (52) precond_def -> PRECONDITION_KEY LPAREN . AND_KEY literals_lst RPAREN
    (65) literal -> LPAREN . NOT_KEY predicate RPAREN
    (69) predicate -> LPAREN . NAME variables_lst RPAREN
    (70) predicate -> LPAREN . EQUALS VARIABLE VARIABLE RPAREN
    (71) predicate -> LPAREN . NAME RPAREN

    AND_KEY         shift and go to state 133
    NOT_KEY         shift and go to state 134
    NAME            shift and go to state 135
    EQUALS          shift and go to state 136


state 119

    (53) precond_def -> PRECONDITION_KEY literal .

    EFFECT_KEY      reduce using rule 53 (precond_def -> PRECONDITION_KEY literal .)


state 120

    (66) literal -> predicate .

    EFFECT_KEY      reduce using rule 66 (literal -> predicate .)
    RPAREN          reduce using rule 66 (literal -> predicate .)
    LPAREN          reduce using rule 66 (literal -> predicate .)
    PROBABILITY     reduce using rule 66 (literal -> predicate .)


state 121

    (49) parameters_def -> PARAMETERS_KEY LPAREN typed_variables_lst . RPAREN

    RPAREN          shift and go to state 137


state 122

    (50) parameters_def -> PARAMETERS_KEY LPAREN RPAREN .

    PRECONDITION_KEY reduce using rule 50 (parameters_def -> PARAMETERS_KEY LPAREN RPAREN .)


state 123

    (23) init_def -> LPAREN INIT_KEY LPAREN AND_KEY ground_predicates_lst . RPAREN RPAREN

    RPAREN          shift and go to state 138


state 124

    (72) ground_predicate -> LPAREN NAME constants_lst . RPAREN

    RPAREN          shift and go to state 139


state 125

    (73) ground_predicate -> LPAREN NAME RPAREN .

    LPAREN          reduce using rule 73 (ground_predicate -> LPAREN NAME RPAREN .)
    RPAREN          reduce using rule 73 (ground_predicate -> LPAREN NAME RPAREN .)


state 126

    (25) goal_def -> LPAREN GOAL_KEY LPAREN AND_KEY . ground_predicates_lst RPAREN RPAREN
    (67) ground_predicates_lst -> . ground_predicate ground_predicates_lst
    (68) ground_predicates_lst -> . ground_predicate
    (72) ground_predicate -> . LPAREN NAME constants_lst RPAREN
    (73) ground_predicate -> . LPAREN NAME RPAREN

    LPAREN          shift and go to state 108

    ground_predicates_lst          shift and go to state 140
    ground_predicate               shift and go to state 88

state 127

    (76) typed_variables_lst -> variables_lst HYPHEN type . typed_variables_lst
    (77) typed_variables_lst -> variables_lst HYPHEN type .
    (76) typed_variables_lst -> . variables_lst HYPHEN type typed_variables_lst
    (77) typed_variables_lst -> . variables_lst HYPHEN type
    (80) variables_lst -> . VARIABLE variables_lst
    (81) variables_lst -> . VARIABLE

    RPAREN          reduce using rule 77 (typed_variables_lst -> variables_lst HYPHEN type .)
    VARIABLE        shift and go to state 96

    variables_lst                  shift and go to state 95
    typed_variables_lst            shift and go to state 141

state 128

    (43) function_def -> LPAREN NAME VARIABLE HYPHEN NAME . RPAREN

    RPAREN          shift and go to state 142


state 129

    (54) effects_def -> EFFECT_KEY effects .

    RPAREN          reduce using rule 54 (effects_def -> EFFECT_KEY effects .)


state 130

    (55) effects -> effect .

    RPAREN          reduce using rule 55 (effects -> effect .)
    PROBABILITY     reduce using rule 55 (effects -> effect .)


state 131

    (56) effects -> LPAREN . AND_KEY effects_lst RPAREN
    (60) effect -> LPAREN . PROBABILISTIC_KEY probability_list RPAREN
    (65) literal -> LPAREN . NOT_KEY predicate RPAREN
    (69) predicate -> LPAREN . NAME variables_lst RPAREN
    (70) predicate -> LPAREN . EQUALS VARIABLE VARIABLE RPAREN
    (71) predicate -> LPAREN . NAME RPAREN

    AND_KEY         shift and go to state 143
    PROBABILISTIC_KEY shift and go to state 144
    NOT_KEY         shift and go to state 134
    NAME            shift and go to state 135
    EQUALS          shift and go to state 136


state 132

    (59) effect -> literal .

    RPAREN          reduce using rule 59 (effect -> literal .)
    LPAREN          reduce using rule 59 (effect -> literal .)
    PROBABILITY     reduce using rule 59 (effect -> literal .)


state 133

    (52) precond_def -> PRECONDITION_KEY LPAREN AND_KEY . literals_lst RPAREN
    (63) literals_lst -> . literal literals_lst
    (64) literals_lst -> . literal
    (65) literal -> . LPAREN NOT_KEY predicate RPAREN
    (66) literal -> . predicate
    (69) predicate -> . LPAREN NAME variables_lst RPAREN
    (70) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (71) predicate -> . LPAREN NAME RPAREN

    LPAREN          shift and go to state 145

    literals_lst                   shift and go to state 146
    literal                        shift and go to state 147
    predicate                      shift and go to state 120

state 134

    (65) literal -> LPAREN NOT_KEY . predicate RPAREN
    (69) predicate -> . LPAREN NAME variables_lst RPAREN
    (70) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (71) predicate -> . LPAREN NAME RPAREN

    LPAREN          shift and go to state 148

    predicate                      shift and go to state 149

state 135

    (69) predicate -> LPAREN NAME . variables_lst RPAREN
    (71) predicate -> LPAREN NAME . RPAREN
    (80) variables_lst -> . VARIABLE variables_lst
    (81) variables_lst -> . VARIABLE

    RPAREN          shift and go to state 151
    VARIABLE        shift and go to state 96

    variables_lst                  shift and go to state 150

state 136

    (70) predicate -> LPAREN EQUALS . VARIABLE VARIABLE RPAREN

    VARIABLE        shift and go to state 152


state 137

    (49) parameters_def -> PARAMETERS_KEY LPAREN typed_variables_lst RPAREN .

    PRECONDITION_KEY reduce using rule 49 (parameters_def -> PARAMETERS_KEY LPAREN typed_variables_lst RPAREN .)


state 138

    (23) init_def -> LPAREN INIT_KEY LPAREN AND_KEY ground_predicates_lst RPAREN . RPAREN

    RPAREN          shift and go to state 153


state 139

    (72) ground_predicate -> LPAREN NAME constants_lst RPAREN .

    LPAREN          reduce using rule 72 (ground_predicate -> LPAREN NAME constants_lst RPAREN .)
    RPAREN          reduce using rule 72 (ground_predicate -> LPAREN NAME constants_lst RPAREN .)


state 140

    (25) goal_def -> LPAREN GOAL_KEY LPAREN AND_KEY ground_predicates_lst . RPAREN RPAREN

    RPAREN          shift and go to state 154


state 141

    (76) typed_variables_lst -> variables_lst HYPHEN type typed_variables_lst .

    RPAREN          reduce using rule 76 (typed_variables_lst -> variables_lst HYPHEN type typed_variables_lst .)


state 142

    (43) function_def -> LPAREN NAME VARIABLE HYPHEN NAME RPAREN .

    LPAREN          reduce using rule 43 (function_def -> LPAREN NAME VARIABLE HYPHEN NAME RPAREN .)
    RPAREN          reduce using rule 43 (function_def -> LPAREN NAME VARIABLE HYPHEN NAME RPAREN .)


state 143

    (56) effects -> LPAREN AND_KEY . effects_lst RPAREN
    (57) effects_lst -> . effect effects_lst
    (58) effects_lst -> . effect
    (59) effect -> . literal
    (60) effect -> . LPAREN PROBABILISTIC_KEY probability_list RPAREN
    (65) literal -> . LPAREN NOT_KEY predicate RPAREN
    (66) literal -> . predicate
    (69) predicate -> . LPAREN NAME variables_lst RPAREN
    (70) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (71) predicate -> . LPAREN NAME RPAREN

    LPAREN          shift and go to state 155

    effects_lst                    shift and go to state 156
    effect                         shift and go to state 157
    literal                        shift and go to state 132
    predicate                      shift and go to state 120

state 144

    (60) effect -> LPAREN PROBABILISTIC_KEY . probability_list RPAREN
    (61) probability_list -> . PROBABILITY effects
    (62) probability_list -> . PROBABILITY effects probability_list

    PROBABILITY     shift and go to state 159

    probability_list               shift and go to state 158

state 145

    (65) literal -> LPAREN . NOT_KEY predicate RPAREN
    (69) predicate -> LPAREN . NAME variables_lst RPAREN
    (70) predicate -> LPAREN . EQUALS VARIABLE VARIABLE RPAREN
    (71) predicate -> LPAREN . NAME RPAREN

    NOT_KEY         shift and go to state 134
    NAME            shift and go to state 135
    EQUALS          shift and go to state 136


state 146

    (52) precond_def -> PRECONDITION_KEY LPAREN AND_KEY literals_lst . RPAREN

    RPAREN          shift and go to state 160


state 147

    (63) literals_lst -> literal . literals_lst
    (64) literals_lst -> literal .
    (63) literals_lst -> . literal literals_lst
    (64) literals_lst -> . literal
    (65) literal -> . LPAREN NOT_KEY predicate RPAREN
    (66) literal -> . predicate
    (69) predicate -> . LPAREN NAME variables_lst RPAREN
    (70) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (71) predicate -> . LPAREN NAME RPAREN

    RPAREN          reduce using rule 64 (literals_lst -> literal .)
    LPAREN          shift and go to state 145

    literal                        shift and go to state 147
    literals_lst                   shift and go to state 161
    predicate                      shift and go to state 120

state 148

    (69) predicate -> LPAREN . NAME variables_lst RPAREN
    (70) predicate -> LPAREN . EQUALS VARIABLE VARIABLE RPAREN
    (71) predicate -> LPAREN . NAME RPAREN

    NAME            shift and go to state 135
    EQUALS          shift and go to state 136


state 149

    (65) literal -> LPAREN NOT_KEY predicate . RPAREN

    RPAREN          shift and go to state 162


state 150

    (69) predicate -> LPAREN NAME variables_lst . RPAREN

    RPAREN          shift and go to state 163


state 151

    (71) predicate -> LPAREN NAME RPAREN .

    EFFECT_KEY      reduce using rule 71 (predicate -> LPAREN NAME RPAREN .)
    RPAREN          reduce using rule 71 (predicate -> LPAREN NAME RPAREN .)
    LPAREN          reduce using rule 71 (predicate -> LPAREN NAME RPAREN .)
    PROBABILITY     reduce using rule 71 (predicate -> LPAREN NAME RPAREN .)


state 152

    (70) predicate -> LPAREN EQUALS VARIABLE . VARIABLE RPAREN

    VARIABLE        shift and go to state 164


state 153

    (23) init_def -> LPAREN INIT_KEY LPAREN AND_KEY ground_predicates_lst RPAREN RPAREN .

    LPAREN          reduce using rule 23 (init_def -> LPAREN INIT_KEY LPAREN AND_KEY ground_predicates_lst RPAREN RPAREN .)


state 154

    (25) goal_def -> LPAREN GOAL_KEY LPAREN AND_KEY ground_predicates_lst RPAREN . RPAREN

    RPAREN          shift and go to state 165


state 155

    (60) effect -> LPAREN . PROBABILISTIC_KEY probability_list RPAREN
    (65) literal -> LPAREN . NOT_KEY predicate RPAREN
    (69) predicate -> LPAREN . NAME variables_lst RPAREN
    (70) predicate -> LPAREN . EQUALS VARIABLE VARIABLE RPAREN
    (71) predicate -> LPAREN . NAME RPAREN

    PROBABILISTIC_KEY shift and go to state 144
    NOT_KEY         shift and go to state 134
    NAME            shift and go to state 135
    EQUALS          shift and go to state 136


state 156

    (56) effects -> LPAREN AND_KEY effects_lst . RPAREN

    RPAREN          shift and go to state 166


state 157

    (57) effects_lst -> effect . effects_lst
    (58) effects_lst -> effect .
    (57) effects_lst -> . effect effects_lst
    (58) effects_lst -> . effect
    (59) effect -> . literal
    (60) effect -> . LPAREN PROBABILISTIC_KEY probability_list RPAREN
    (65) literal -> . LPAREN NOT_KEY predicate RPAREN
    (66) literal -> . predicate
    (69) predicate -> . LPAREN NAME variables_lst RPAREN
    (70) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (71) predicate -> . LPAREN NAME RPAREN

    RPAREN          reduce using rule 58 (effects_lst -> effect .)
    LPAREN          shift and go to state 155

    effect                         shift and go to state 157
    effects_lst                    shift and go to state 167
    literal                        shift and go to state 132
    predicate                      shift and go to state 120

state 158

    (60) effect -> LPAREN PROBABILISTIC_KEY probability_list . RPAREN

    RPAREN          shift and go to state 168


state 159

    (61) probability_list -> PROBABILITY . effects
    (62) probability_list -> PROBABILITY . effects probability_list
    (55) effects -> . effect
    (56) effects -> . LPAREN AND_KEY effects_lst RPAREN
    (59) effect -> . literal
    (60) effect -> . LPAREN PROBABILISTIC_KEY probability_list RPAREN
    (65) literal -> . LPAREN NOT_KEY predicate RPAREN
    (66) literal -> . predicate
    (69) predicate -> . LPAREN NAME variables_lst RPAREN
    (70) predicate -> . LPAREN EQUALS VARIABLE VARIABLE RPAREN
    (71) predicate -> . LPAREN NAME RPAREN

    LPAREN          shift and go to state 131

    effects                        shift and go to state 169
    effect                         shift and go to state 130
    literal                        shift and go to state 132
    predicate                      shift and go to state 120

state 160

    (52) precond_def -> PRECONDITION_KEY LPAREN AND_KEY literals_lst RPAREN .

    EFFECT_KEY      reduce using rule 52 (precond_def -> PRECONDITION_KEY LPAREN AND_KEY literals_lst RPAREN .)


state 161

    (63) literals_lst -> literal literals_lst .

    RPAREN          reduce using rule 63 (literals_lst -> literal literals_lst .)


state 162

    (65) literal -> LPAREN NOT_KEY predicate RPAREN .

    EFFECT_KEY      reduce using rule 65 (literal -> LPAREN NOT_KEY predicate RPAREN .)
    RPAREN          reduce using rule 65 (literal -> LPAREN NOT_KEY predicate RPAREN .)
    LPAREN          reduce using rule 65 (literal -> LPAREN NOT_KEY predicate RPAREN .)
    PROBABILITY     reduce using rule 65 (literal -> LPAREN NOT_KEY predicate RPAREN .)


state 163

    (69) predicate -> LPAREN NAME variables_lst RPAREN .

    EFFECT_KEY      reduce using rule 69 (predicate -> LPAREN NAME variables_lst RPAREN .)
    RPAREN          reduce using rule 69 (predicate -> LPAREN NAME variables_lst RPAREN .)
    LPAREN          reduce using rule 69 (predicate -> LPAREN NAME variables_lst RPAREN .)
    PROBABILITY     reduce using rule 69 (predicate -> LPAREN NAME variables_lst RPAREN .)


state 164

    (70) predicate -> LPAREN EQUALS VARIABLE VARIABLE . RPAREN

    RPAREN          shift and go to state 170


state 165

    (25) goal_def -> LPAREN GOAL_KEY LPAREN AND_KEY ground_predicates_lst RPAREN RPAREN .

    RPAREN          reduce using rule 25 (goal_def -> LPAREN GOAL_KEY LPAREN AND_KEY ground_predicates_lst RPAREN RPAREN .)


state 166

    (56) effects -> LPAREN AND_KEY effects_lst RPAREN .

    RPAREN          reduce using rule 56 (effects -> LPAREN AND_KEY effects_lst RPAREN .)
    PROBABILITY     reduce using rule 56 (effects -> LPAREN AND_KEY effects_lst RPAREN .)


state 167

    (57) effects_lst -> effect effects_lst .

    RPAREN          reduce using rule 57 (effects_lst -> effect effects_lst .)


state 168

    (60) effect -> LPAREN PROBABILISTIC_KEY probability_list RPAREN .

    RPAREN          reduce using rule 60 (effect -> LPAREN PROBABILISTIC_KEY probability_list RPAREN .)
    LPAREN          reduce using rule 60 (effect -> LPAREN PROBABILISTIC_KEY probability_list RPAREN .)
    PROBABILITY     reduce using rule 60 (effect -> LPAREN PROBABILISTIC_KEY probability_list RPAREN .)


state 169

    (61) probability_list -> PROBABILITY effects .
    (62) probability_list -> PROBABILITY effects . probability_list
    (61) probability_list -> . PROBABILITY effects
    (62) probability_list -> . PROBABILITY effects probability_list

    RPAREN          reduce using rule 61 (probability_list -> PROBABILITY effects .)
    PROBABILITY     shift and go to state 159

    probability_list               shift and go to state 171

state 170

    (70) predicate -> LPAREN EQUALS VARIABLE VARIABLE RPAREN .

    EFFECT_KEY      reduce using rule 70 (predicate -> LPAREN EQUALS VARIABLE VARIABLE RPAREN .)
    RPAREN          reduce using rule 70 (predicate -> LPAREN EQUALS VARIABLE VARIABLE RPAREN .)
    LPAREN          reduce using rule 70 (predicate -> LPAREN EQUALS VARIABLE VARIABLE RPAREN .)
    PROBABILITY     reduce using rule 70 (predicate -> LPAREN EQUALS VARIABLE VARIABLE RPAREN .)


state 171

    (62) probability_list -> PROBABILITY effects probability_list .

    RPAREN          reduce using rule 62 (probability_list -> PROBABILITY effects probability_list .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for LPAREN in state 7 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 13 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 22 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 24 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 38 resolved as shift
WARNING: reduce/reduce conflict in state 13 resolved using rule (opt_dom_parts -> opt_dom_part)
WARNING: rejected rule (empty -> <empty>) in state 13
